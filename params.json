{
  "name": "pprint",
  "tagline": "A header-only library for C++(0x) that allows automagic pretty-printing of any container.",
  "body": "# pprint\r\n\r\nA pretty printing library for C++ containers.\r\nThis library was forked from [cxx-prettyprint](http://louisdx.github.io/cxx-prettyprint/) which was written by Louis Delacroix.\r\n\r\n## Synopsis\r\n\r\nSimply by including this header-only library in your source file,\r\nyou can say `std::cout << x` for any container object `x`. Sensible\r\ndefaults are provided, but the behaviour (i.e. the delimiters) are\r\ncompile-time customizable to a great extent via partial specializiation.\r\n\r\n## Usage\r\n\r\nJust copy `include/pprint` and add `#include <pprint/pprint.h>` to your source file and make sure\r\nthat `pprint.h` is findable.\r\n\r\n## Example\r\n\r\nSome usage examples are provided by `example/ppdemo.cpp`.\r\n\r\nUsing GCC, compile with\r\n\r\n```bash\r\n$ g++ -W -Wall -pedantic -O2 -s ppdemo.cpp -o ppdemo -std=c++0x\r\n$ g++ -W -Wall -pedantic -O2 -s ppdemo98.cpp -o ppdemo98\r\n```\r\n\r\nFor the C++98/03-version, define `NO_TR1` to prevent any inclusion of\r\nTR1 headers and to disable `std::tr1::tuple` support.\r\n\r\nFor details, please see the website https://github.com/rinatz/pprint.\r\n\r\n## License\r\n\r\nBoost Software License, Version 1.0.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}